{"version":3,"file":"static/js/232.6d5d7967.chunk.js","mappings":"oOA+BA,MA3BA,YAAoD,IAA9BA,EAA6B,EAA7BA,SAAoBC,GAAS,EAAnBC,SAAmB,EAATD,OAChCE,GAAmBC,EAAAA,EAAAA,KAAnBD,eAYR,OACE,kBAAMD,SAPa,SAAAG,GACnBA,EAAEC,iBAEFH,EAAeE,EAAEE,OAAOC,SAASC,MAAMR,MACxC,EAGC,WACE,kBAAOA,MAAOA,EAAOS,KAAK,OAAOC,KAAK,QAAQX,SAZ7B,SAAAK,GACnBL,EAASK,EAAEE,OAAON,MACnB,KAWG,mBAAQS,KAAK,SAAb,sBAGL,E,SCGD,MArBA,YAA8B,IAATE,EAAQ,EAARA,KACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAKG,KAAI,SAAAC,GACR,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,MAAOP,EAASK,EAATL,KACnB,OACE,yBACE,SAAC,KAAD,CAAMQ,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMR,GAAlC,SACGK,GAASP,KAFLM,EAMZ,KAGN,E,SCWD,MA1BA,SAAgBK,GAAQ,IAAD,EACrB,GAAuClB,EAAAA,EAAAA,KAA/BmB,EAAR,EAAQA,WAAYpB,EAApB,EAAoBA,eACpB,GAAwCqB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAajD,OAXAC,EAAAA,EAAAA,YAAU,WACJF,GACFxB,EAAewB,EAGlB,GAAE,CAACxB,KAOF,SAAC2B,EAAA,EAAD,WACE,gCACE,SAAC,EAAD,CAAY7B,MAAO0B,EAAa3B,SAPrB,SAAAC,GACfyB,EAA0B,KAAVzB,EAAe,CAAEQ,MAAOR,GAAU,CAAC,EACpD,IAMMsB,EAAWQ,OAAS,IAAK,SAAC,EAAD,CAAWnB,KAAMW,QAIlD,C","sources":["components/SearchForm/SearchForm.jsx","components/MovieList/MovieList.jsx","pages/MovieSearchPage/MovieSearchPage.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMovie } from '../../context/useContext';\n\nfunction SearchForm({ onChange, onSubmit, value }) {\n  const { getMovieByName } = useMovie();\n\n  const handleChange = e => {\n    onChange(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // onSubmit(e.target.elements.query.value);\n    getMovieByName(e.target.elements.query.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input value={value} type=\"text\" name=\"query\" onChange={handleChange} />\n      <button type=\"submit\">SEARCH</button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  // onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nfunction MovieList({ data }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {data.map(trend => {\n        const { id, title, name } = trend;\n        return (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title || name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nMovieList.propTypes = { data: PropTypes.array.isRequired };\n\nexport default MovieList;\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport MovieList from '../../components/MovieList/MovieList';\nimport Container from '../../components/Container/Container';\nimport { useMovie } from '../../context/useContext';\n\nfunction Movies(props) {\n  const { searchList, getMovieByName } = useMovie();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (searchQuery) {\n      getMovieByName(searchQuery);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getMovieByName]); // Если добавить searchQuery, то поиск будет происходить по каждой введенной букве в поиск\n\n  const onChange = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <Container>\n      <section>\n        <SearchForm value={searchQuery} onChange={onChange} />\n        {searchList.length > 0 && <MovieList data={searchList} />}\n      </section>\n    </Container>\n  );\n}\n\nexport default Movies;\n"],"names":["onChange","value","onSubmit","getMovieByName","useMovie","e","preventDefault","target","elements","query","type","name","data","location","useLocation","map","trend","id","title","to","state","from","props","searchList","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","Container","length"],"sourceRoot":""}