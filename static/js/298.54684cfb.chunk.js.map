{"version":3,"file":"static/js/298.54684cfb.chunk.js","mappings":"kNACA,EAA8B,kCAA9B,EAA6E,iCAA7E,EAA2H,iCAA3H,EAA4K,mEAA5K,EAA4P,gEAA5P,EAAsU,8B,SCAtU,GAAgB,OAAS,0B,SCyBzB,MAhBA,YAAqC,IAAjBA,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,SACtB,OACE,SAAC,KAAD,CAAMD,GAAIA,EAAV,UACE,oBAAQE,UAAWC,EAAAA,OAAnB,WACE,SAAC,MAAD,CAAaD,UAAWC,EAAAA,QACvBF,MAIR,E,gBCiED,MAvEA,YAAiC,EAATG,MAAU,IAAD,IACvBC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaJ,aAAZ,aAAG,EAAgBK,YAAnB,QAA2B,IAE7C,GAAsCC,EAAAA,EAAAA,KAA9BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,YAMtB,IAJAC,EAAAA,EAAAA,YAAU,WACRF,EAAaN,EACd,GAAE,CAACM,EAAcN,IAEbS,OAAOC,KAAKH,GAAaI,OAA9B,CAIA,IACEC,EAOEL,EAPFK,MACAC,EAMEN,EANFM,KACAC,EAKEP,EALFO,SACAC,EAIER,EAJFQ,aACAC,EAGET,EAHFS,aACAC,EAEEV,EAFFU,OACAC,EACEX,EADFW,YAGIC,EAAY,6CAAyCD,GACrDE,EAAaC,KAAKC,MAAqB,GAAfN,GAAqB,IAC7CO,EAAY,IAAIC,KAAKT,GACrBU,EAAW,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAQS,KAAI,SAAAC,GAAG,OAAIA,EAAId,IAAR,IAAce,KAAK,KAItD,OAFAC,QAAQC,MAAM,cAGZ,UAACC,EAAA,EAAD,YACE,SAAC,EAAD,CAAUpC,GAAIO,EAAd,sBACA,qBAASL,UAAWC,EAApB,WACE,gBAAKkC,IAAKb,EAAcc,IAAI,GAAGC,MAAO,OACtC,iBAAKrC,UAAWC,EAAhB,WACE,eAAGD,UAAWC,EAAd,UACGc,GAASC,EADZ,IACmBU,EAAUY,cAD7B,QAGA,wCAAgBf,MAChB,cAAGvB,UAAWC,EAAd,uBACA,uBAAIgB,KACJ,cAAGjB,UAAWC,EAAd,qBACA,uBAAI2B,WAIR,qBAAS5B,UAAWC,EAApB,WACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMH,GAAG,OAAOI,MAAO,CAAEK,KAAMF,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMP,GAAG,UAAUI,MAAO,CAAEK,KAAMF,GAAlC,8BAMN,SAAC,EAAAkC,SAAD,WACE,SAAC,KAAD,QApDL,CAwDF,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","webpack://react-homework-template/./src/components/BackLink.module.css?d325","components/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainSection\":\"MovieDetails_mainSection__ZOQdx\",\"secSection\":\"MovieDetails_secSection__0UoMT\",\"movieTitle\":\"MovieDetails_movieTitle__IUqE1\",\"movieOverview\":\"MovieDetails_movieOverview__fwvIE MovieDetails_movieTitle__IUqE1\",\"movieGenre\":\"MovieDetails_movieGenre__kqJ7E MovieDetails_movieTitle__IUqE1\",\"addInfo\":\"MovieDetails_addInfo__dNV2h\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BackLink_button__6BaXb\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport s from './BackLink.module.css';\nimport PropTypes from 'prop-types';\n\n/**\n * !When you press \"back\" - data is re-fetched. How to Memo it?\n */\n\nfunction BackLink({ to, children }) {\n  return (\n    <Link to={to}>\n      <button className={s.button}>\n        <FaArrowLeft className={s.arrow} />\n        {children}\n      </button>\n    </Link>\n  );\n}\n\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  children: PropTypes.string.isRequired,\n};\n\nexport default BackLink;\n","import { useEffect, Suspense } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport s from './MovieDetails.module.css';\nimport BackLink from '../components/BackLink';\nimport Container from '../components/Container';\n\nimport { useMovie } from '../components/useContext';\n\n/**\n * TODO how do i stop rendering main section while pressing cast/reviews?\n * ! When you click different movies, you can briefly see prev poster\n */\n\nfunction MovieDetails({ state }) {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const { getMovieById, searchValue } = useMovie();\n\n  useEffect(() => {\n    getMovieById(movieId);\n  }, [getMovieById, movieId]);\n\n  if (!Object.keys(searchValue).length) {\n    return;\n  }\n\n  const {\n    title,\n    name,\n    overview,\n    release_date,\n    vote_average,\n    genres,\n    poster_path,\n  } = searchValue;\n\n  const movieAddress = `https://image.tmdb.org/t/p/original${poster_path}`;\n  const movieScore = Math.round(vote_average * 10) + '%';\n  const movieDate = new Date(release_date);\n  const movieGenres = genres?.map(gen => gen.name).join(' ');\n\n  console.count('render-md');\n\n  return (\n    <Container>\n      <BackLink to={backLinkHref}>Go Back</BackLink>\n      <section className={s.mainSection}>\n        <img src={movieAddress} alt=\"\" width={200} />\n        <div className={s.secSection}>\n          <p className={s.movieTitle}>\n            {title || name}({movieDate.getFullYear()})\n          </p>\n          <p>User score: {movieScore}</p>\n          <p className={s.movieOverview}>Overview</p>\n          <p>{overview}</p>\n          <p className={s.movieGenre}>Genres</p>\n          <p>{movieGenres}</p>\n        </div>\n      </section>\n\n      <section className={s.addInfo}>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </section>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n\nexport default MovieDetails;\n\n//*Its bad method with reducer and own state.\n\n// import { useEffect, useMemo, useReducer, Suspense } from 'react';\n// import { useParams, Outlet, Link, useLocation } from 'react-router-dom';\n// import MoviesAPI from '../MoviesAPI';\n// import s from './MovieDetails.module.css';\n// import BackLink from '../components/BackLink';\n// import Container from '../components/Container';\n\n// /**\n//  * TODO how do i stop rendering main section while pressing cast/reviews?\n//  * TODO make external state component\n//  * ? Is reducer necessary? How to change it to useState\n//  * ! 429 error when 'cast' is opened\n// //  * TODO make common container components\n// //  * ! after opening cast or reviews 'go back button' sends to \"home\", not search results\n//  */\n\n// function reducer(movie, action) {\n//   return action;\n// }\n\n// function MovieDetails({ state }) {\n//   const [movie, dispatch] = useReducer(reducer, {});\n//   const { movieId } = useParams();\n//   const FetchAPI = useMemo(() => new MoviesAPI(), []);\n//   const location = useLocation();\n//   const backLinkHref = location.state?.from ?? '/';\n\n//   useEffect(() => {\n//     FetchAPI.getMovieById(Number(movieId)).then(data => dispatch(data));\n//   }, [FetchAPI, movieId]);\n\n//   if (!Object.keys(movie).length) {\n//     return;\n//   }\n\n//   const {\n//     title,\n//     name,\n//     overview,\n//     release_date,\n//     vote_average,\n//     genres,\n//     poster_path,\n//   } = movie;\n\n//   const movieAddress = `https://image.tmdb.org/t/p/original${poster_path}`;\n//   const movieScore = Math.round(vote_average * 10) + '%';\n//   const movieDate = new Date(release_date);\n//   const movieGenres = genres?.map(gen => gen.name).join(' ');\n\n//   return (\n//     <Container>\n//       <BackLink to={backLinkHref}>Go Back</BackLink>\n//       <section className={s.mainSection}>\n//         <img src={movieAddress} alt=\"\" width={200} />\n//         <div className={s.secSection}>\n//           <p className={s.movieTitle}>\n//             {title || name}({movieDate.getFullYear()})\n//           </p>\n//           <p>User score: {movieScore}</p>\n//           <p className={s.movieOverview}>Overview</p>\n//           <p>{overview}</p>\n//           <p className={s.movieGenre}>Genres</p>\n//           <p>{movieGenres}</p>\n//         </div>\n//       </section>\n\n//       <section className={s.addInfo}>\n//         <p>Additional information</p>\n//         <ul>\n//           <li>\n//             <Link to=\"cast\" state={{ from: backLinkHref }}>\n//               Cast\n//             </Link>\n//           </li>\n//           <li>\n//             <Link to=\"reviews\" state={{ from: backLinkHref }}>\n//               Reviews\n//             </Link>\n//           </li>\n//         </ul>\n//       </section>\n//       <Suspense>\n//         <Outlet />\n//       </Suspense>\n//     </Container>\n//   );\n// }\n\n// export default MovieDetails;\n"],"names":["to","children","className","s","state","movieId","useParams","backLinkHref","useLocation","from","useMovie","getMovieById","searchValue","useEffect","Object","keys","length","title","name","overview","release_date","vote_average","genres","poster_path","movieAddress","movieScore","Math","round","movieDate","Date","movieGenres","map","gen","join","console","count","Container","src","alt","width","getFullYear","Suspense"],"sourceRoot":""}