{"version":3,"file":"static/js/130.8b9238b4.chunk.js","mappings":"yMACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAAkG,0B,gBCgClG,MA7BA,YAA8B,IAAVA,EAAS,EAATA,MACVC,EAAiDD,EAAjDC,aAAcC,EAAmCF,EAAnCE,cAAeC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UACrCC,EAAa,8CAA0CJ,GAE7D,OACE,+BACE,2BACGA,GACC,gBACEK,IAAKD,EACLE,IAAKJ,GAAQD,EACbM,UAAWC,KAGb,gBAAKD,UAAWC,EAAhB,8BAEF,2BACE,wBAAKN,GAAQD,IACZE,IAAa,uCAAeA,YAKtC,ECAD,MArBA,SAAcJ,GACZ,OAAqCU,EAAAA,EAAAA,KAA7BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,aACZC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,WACRH,EAAaI,OAAOH,GACrB,GAAE,CAACD,EAAcC,IAEbF,EAAWM,OAIhB,OACE,oBAAST,UAAWC,EAApB,SACGE,EAAWO,KAAI,SAAAC,GACd,OAAO,SAAC,EAAD,CAA8BnB,MAAOmB,GAAtBA,EAAWC,GAClC,KAGN,C","sources":["webpack://react-homework-template/./src/components/Cast.module.css?f72c","components/CastItem.jsx","components/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorImg\":\"Cast_actorImg__SCSnM\",\"skeleton\":\"Cast_skeleton__vhdFP\",\"castSection\":\"Cast_castSection__QnZgl\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Cast.module.css';\n\nfunction CastItem({ props }) {\n  const { profile_path, original_name, name, character } = props;\n  const posterAddress = `https://image.tmdb.org/t/p/original/${profile_path}`;\n\n  return (\n    <>\n      <div>\n        {profile_path ? (\n          <img\n            src={posterAddress}\n            alt={name || original_name}\n            className={s.actorImg}\n          />\n        ) : (\n          <div className={s.skeleton}>Image not found</div>\n        )}\n        <ul>\n          <li>{name || original_name}</li>\n          {character && <p>Character: {character}</p>}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nCastItem.propTypes = {\n  props: PropTypes.object.isRequired,\n};\n\nexport default CastItem;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport s from './Cast.module.css';\nimport { useMovie } from './useContext';\nimport CastItem from './CastItem';\n\nfunction Cast(props) {\n  const { searchList, getMovieCast } = useMovie();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(Number(movieId));\n  }, [getMovieCast, movieId]);\n\n  if (!searchList.length) {\n    return;\n  }\n\n  return (\n    <section className={s.castSection}>\n      {searchList.map(searchItem => {\n        return <CastItem key={searchItem.id} props={searchItem} />;\n      })}\n    </section>\n  );\n}\n\nexport default Cast;\n"],"names":["props","profile_path","original_name","name","character","posterAddress","src","alt","className","s","useMovie","searchList","getMovieCast","movieId","useParams","useEffect","Number","length","map","searchItem","id"],"sourceRoot":""}